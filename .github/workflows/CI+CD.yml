name: CI/CD - Build, Push Docker, Deploy to EC2

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 레포 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. application.properties 디코딩
      - name: Ensure resources directory exists
        run: mkdir -p src/main/resources

      - name: Decode and create application.properties
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 --decode > src/main/resources/application.properties
        shell: bash

      # 3. JDK 및 Maven 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # 4. Maven 빌드
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 5. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            romaydev/meme:latest
            romaydev/meme:${{ github.sha }}

      # 7. EC2 서버에 SSH 접속 및 Docker Pull & Run
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull romaydev/meme:latest
            docker stop meme || true
            docker rm meme || true
            docker run -d --name meme -p 8080:8080 romaydev/meme:latest
