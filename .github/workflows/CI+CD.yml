name: CI/CD - Build, Push Docker, Deploy to EC2

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 레포 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # 3. application.properties 생성
      - name: Create application.properties
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 -d > src/main/resources/application.properties
          echo "✅ application.properties created successfully"
        shell: bash

      # 4. Maven 빌드
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 5. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # 6. Docker 이미지 빌드 및 푸시 (캐시 무시)
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          no-cache: true               # 🔹 캐시 무시
          tags: |
            romaydev/meme:latest
            romaydev/meme:${{ github.sha }}

      # 7. EC2 서버 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🚀 Starting deployment..."
            
            # EC2 로그 디렉토리 생성
            mkdir -p /home/ubuntu/logs
            
            # Docker 이미지 최신화
            echo "📦 Pulling latest Docker image..."
            docker pull romaydev/meme:latest
            
            # 기존 컨테이너 종료/삭제
            echo "🔄 Stopping existing container..."
            docker stop meme || true
            docker rm meme || true
            
            # 새로운 컨테이너 실행 (로그 디렉토리 연결)
            echo "▶️ Starting new container..."
            docker run -d \
              --name meme \
              -p 8080:8080 \
              --network meme-network \
              --restart unless-stopped \
              -v /home/ubuntu/logs:/home/ubuntu/logs \
              romaydev/meme:latest
            
            # 컨테이너 상태 확인
            echo "✅ Deployment completed!"
            docker ps | grep meme
